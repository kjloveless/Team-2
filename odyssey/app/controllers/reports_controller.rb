class ReportsController < ApplicationController  
  before_action :logged_in
  before_action :admin_or_standard

  #reports/donor
  def donor
      respond_to do |format|
        
        #reports/donor.html request renders reports.html.erb
        format.html
        
        #reports/donor.csv
        format.csv { 
          
          #Query returns all the pickups for the given month and year. strftime() 
          #is used to access the month %m and year %Y. Casting the month 
          #as an int removes the 0 used to pad single digit months. No particular 
          #order at this point. 
          donors = Pickup.joins(:day).where("cast(strftime('%m', date) as int) = ?",
          params[:date][:month]).where("strftime('%Y', date) = ?",
          params[:date][:year])
          
          #sends csv file to the browser with the filename specified in the
          #form.  Default filename is donor.csv. File is generated by
          #the to_donor_csv function inside our Pickup model. 
          send_data donors.to_donor_csv, filename: params[:filename]
        }
      end
  end

  #reports/truck
  def truck
    respond_to do |format|
      
      #reports/truck.html
      format.html {
        
        #Query returns the current and future dates only in ascending order. 
        #Used to populate the dropdown menu in the truck report form. 
        @days =  Day.where("date >= ?", Date.today).order('date ASC')
      } 
      
      #reports/truck.csv
      format.csv {
        
        #Query returns all the pickups for the given date. 
        pickups = Pickup.joins(:day).where("date = ?", params[:pickupday])
        
        #Sends csv file to the browser with the name addresses.csv. File is
        #genearted by the to_routes_csv function inside our Pickup model. 
        send_data pickups.to_routes_csv, filename: "addresses.csv"
      }
      
      #reports/truck.pdf
      format.pdf {
        
        #Query returns all the pickups for the given date.
        pickups = Pickup.joins(:day).where("date = ?", params[:pickupday])
        
        #Sends pdf file to the browser with the name pickups.pdf. File is
        #generated by the to_pdf function inside our Pickup model. Takes the
        #date as an argument.
        send_data pickups.to_pdf(params[:pickupday]), filename: 'pickups.pdf', 
        type: "application/pdf"
      }
    end
  end
end